#!/bin/bash

# Script to switch audio output profiles

# Set the menu for choosing options
menu="$MENU"
# Set the path to save available audio profiles list
audio_profiles_list="$HOME/.local/share/audio-profiles"

Usage(){
    while read -r CurLine; do
        printf '%b\n' "$CurLine"
	done <<-EOF
           \tswitch-audio   -u|--update             Update Profile lists
           \tswitch-audio   -h|--help|-?            Displays this message
           \tswitch-audio   [-s]                    switch audio
	EOF
}

Err() {
    printf 'Err: %s\n' "$2" 1>&2
    [ $1 -gt 0 ] && exit $1
}

Update() {
    # Store name, description and all profile of all devices to  audio_profiles_list
    pactl list cards | sed -n '/device.name/p;/device.description/p;/off: Off/,/Active Profile/p'  | sed -e 's/^[ \t]*//' -e 's/\(^.*\): \(.*\) (sinks:.*/\1,\2/'  > $audio_profiles_list
}

# Make a list of available profiles
[ -f $audio_profiles_list ] || Update

Switch(){
    # Choose a device
    device="$(grep -n "description" $audio_profiles_list | cut -d"\"" -f2 | $menu -p "Choose the device")" || exit 1
    # Replace device.description with device.name
    device="$(sed -n "/${device}/{n;p}" $audio_profiles_list | cut -d"\"" -f2)"
    # Choose a profile
    profile="$(sed -n "/${device}/,/Active/{//!p;}" $audio_profiles_list | cut -d',' -f2 | $menu)"
    # Replace profile.description with profile.name
    [ "$profile" = "Off" ] && profile="off" || profile="$(grep "$profile" $audio_profiles_list | cut -d',' -f1)"
    # Set the profile to device
    pactl set-card-profile $device $profile
}

while [ -n "$1" ]; do
    case $1 in
        --help|-h|-\?)
            Usage; exit 0 ;;
        -s|"")
            Switch; exit 0 ;;
        -u|--update)
            Update; exit 0;;
        -*)
            Err 1 'Incorrect argument(s) specified.' ;;
        *)
            break ;;
    esac
done

