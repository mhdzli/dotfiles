#!/bin/sh

# Attention:
# kmsgrab needs elevated permissions
# sudo setcap cap_sys_admin+ep /usr/bin/ffmpeg
# x11capture assumes INTEL HARDWARE for hardware encoding.
# Relies on https://github.com/andykitchen/swcursor for showing a readable cursor.
# 
# Useful information:
# https://trac.ffmpeg.org/wiki/Capture/Desktop
#
# Usage:
# `$0`: Ask for recording type via menu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

menu="$MENU -p"

updateicon() { \
    echo "$1" > /tmp/recordingicon
    pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
    }

killrecording() {
    recpid="$(cat /tmp/recordingpid)"
    # kill with SIGTERM, allowing finishing touches.
    kill -15 "$recpid"
    rm -f /tmp/recordingpid
    updateicon ""
    pkill -RTMIN+9 "${STATUSBAR:?}"
    # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
    sleep 3
    kill -9 "$recpid"
    exit
    }

screencast() { \
    ffmpeg -y \
    -f x11grab \
    -framerate 60 \
    -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
    -i $DISPLAY \
    -f alsa -i default \
    -r 30 \
     -c:v h264 -crf 0 -preset ultrafast -c:a aac \
    "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏èüéôÔ∏è"
           }

vaapicast() { \
    #Relies on https://github.com/andykitchen/swcursor for showing a readable cursor. (Assuming that you put the swcursor and cursor.png in $HOME/.local/bin) So if you need the cussor uncomment these lines or you can use the x11grab:
#    cd $HOME/.local/bin/
#    swcursor & 
    ffmpeg -y \
    -f alsa -i default \
    -f kmsgrab \
    -i - \
    -vaapi_device /dev/dri/renderD128 \
    -video_size $(xdpyinfo | grep dimensions | awk '{print $2;}') \
    -filter:v hwmap,scale_vaapi=format=nv12 \
    -framerate 60 \
    -r 30 \
    -c:a aac -crtc_id 48 -c:v h264_vaapi \
    "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" & 
#    If you need the cursor you can use this command:
#    ffmpeg -y -vaapi_device /dev/dri/renderD128 -f x11grab -video_size $(xdpyinfo | grep dimensions | awk '{print $2;}') -framerate 60 -r 30 -i $DISPLAY -f alsa -i default -vf 'hwupload,scale_vaapi=format=nv12' -c:v h264_vaapi -qp 24 -c:a aac -f mp4 "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏èüéôÔ∏è"
}

video() { ffmpeg \
    -f x11grab \
    -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
    -i $DISPLAY \
     -c:v h264 -qp 0 -r 30 \
    "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏è"
    }

vaapivideo() { \
    ffmpeg -y \
    -f kmsgrab \
    -i - \
    -vaapi_device /dev/dri/renderD128 \
    -video_size $(xdpyinfo | grep dimensions | awk '{print $2;}') \
    -filter:v hwmap,scale_vaapi=format=nv12 \
    -framerate 60 \
    -r 30 \
    -c:v h264_vaapi \
    "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" & 
#    ffmpeg -y -vaapi_device /dev/dri/renderD128 -f x11grab -video_size $(xdpyinfo | grep dimensions | awk '{print $2;}') -framerate 60 -i $DISPLAY -vf 'hwupload,scale_vaapi=format=nv12' -c:v h264_vaapi -qp 24 -f matroska "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏è"
    }

webcamhidef() { ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 1920x1080 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üé•"
    }

webcam() { ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 640x480 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üé•"
    }

audio() { \
    ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
    echo $! > /tmp/recordingpid
    updateicon "üéôÔ∏è"
    }

askrecording() { \
    choice=$(printf "screencast\\nvideo\\naudio\\nvideo selected\\nwebcam\\nwebcam (hi-def)\\nvaapicast\\nvaapivideo\\nwindow" | $menu "Select recording style")
    case "$choice" in
        screencast) screencast;;
        audio) audio;;
        video) video;;
        *selected) videoselected;;
        webcam) webcam;;
        "webcam (hi-def)") webcamhidef;;
        vaapicast) vaapicast;;
        vaapivideo) vaapivideo;;
    esac
    }

asktoend() { \
    response=$(prompt "Recording still active. End recording?" "echo Yes") &&
    [ "$response" = "Yes" ] &&  killrecording
    }

videoselected()
{
    slop -f "%x %y %w %h" > /tmp/slop
    read -r X Y W H < /tmp/slop
    rm /tmp/slop

    ffmpeg \
    -f x11grab \
    -framerate 60 \
    -video_size "$W"x"$H" \
    -i :0.0+"$X,$Y" \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/box-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏è"
}

case "$1" in
    screencast) screencast;;
    audio) audio;;
    video) video;;
    *selected) videoselected;;
    kill) killrecording;;
    *) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac
