# Some default env vars.
# env = XCURSOR_SIZE,24

# Start wofi opens wofi on first press, closes it on second
# bindr=SUPER, SUPER_L, exec, pkill wofi || wofi

# See Mouse Binds section for bindm usage
# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more

# Start a terminal
bind = $mainMod, Return, exec, $term

# Kill focused window
bind = $mainMod, Q, killactive,

# Start your launcher
bind = $mainMod, D, exec, fuzzel

# Music Player
bind = $mainMod, M, exec, $term ncmpcpp

# Open Camera
# bind = $mainMod , C, exec, mpv --no-osc --no-input-default-bindings --profile=low-latency --input-conf=/dev/null --title='webcam' $(ls /dev/video[0,2,4,6,8] | tail -n 1)
bind = $mainMod, C, exec, ffplay -f v4l2 -input_format mjpeg -video_size 1920x1080 -window_title webcam -i $(ls /dev/video[0,2,4,6,8] | tail -n 1)

#showkeys
bind = $mainMod, P, exec, pkill wshowkeys || wshowkeys -a bottom -t 1
# bind = $mainMod, P, exec, /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & showmethekey-gtk

# Volume control
bind = $mainMod, A, exec, $term pulsemixer

# Download manager
bind = $mainMod, U, exec, dlmgr

# Emoji selection
bind = $mainMod, I, exec, menuunicode

# Bluetooth
bind = $mainMod, comma, exec, menu-bluetooth

# Color picker
bind = $mainMod_SHIFT, P, exec, grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy

# Make the current focus fullscreen
bind = $mainMod, F, fullscreen,

# Make the current focus fullscreen
bind = $mainMod_SHIFT, space, togglefloating,
bind = $mainMod_SHIFT, space, centerwindow,
bind = $mainMod, space, cyclenext,
bind = $mainMod, space, bringactivetotop,

# Make the current focus floating window sticky
bind = $mainMod_SHIFT, C, pin,


# Exit hyprland
bind = $mainMod, escape, exit,
bind = $mainMod, X, exec, prompt "Shutdown computer?" "sudo -A shutdown now"
bind = $mainMod, BackSpace, exec, prompt "Reboot computer?" "sudo -A shutdown -r now"

# lock screen
bind = $mainMod, E, exec, swaylock -eFfki ~/Pictures/lockscreen.png

bind = $mainMod, p, exec, killall wshowkeys || wshowkeys -a bottom -t 1
# bind = $mainMod, p, exec, /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & showmethekey-gtk
# Launch apps
bind = $mainMod, W, exec, $BROWSER
bind = $mainMod, G, exec, gimp-2.99
bind = $mainMod, B, exec, $term bicon ir vifm
bind = $mainMod, S, exec, $term broot -h
bind = $mainMod, Y, exec, killall swaykbdd || swaykbdd

### Clipboard 
bind = $mainMod, V, exec, clipman pick --tool=CUSTOM --tool-args="$MENU -w 100 -d -i" --histpath="~/.local/share/clipman/clipman.json"
bind = $mainMod_SHIFT, V, exec, wclipboard

### Mounting Function
bind = $mainMod, F9, exec, menumount
bind = $mainMod, F10, exec, menuumount
bind = $mainMod, F12, exec, $term nmtui

# Toggle bar
bind = $mainMod_SHIFT, B, execr, killall waybar || waybar

# Toggle monitor 
bind = $mainMod_SHIFT, M, execr, [[ $(hyprctl -j monitors | jq -e '.[] | .dpmsStatus') =~ 'true' ]] && hyprctl dispatch dpms off || hyprctl dispatch dpms on

#bind = $mainMod, P, pseudo, # dwindle
#bind = $mainMod, J, togglesplit, # dwindle

# Function keys
binde = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
binde = , XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bind = , XF86MonBrightnessUp, exec, incbrightness 
bind = , XF86MonBrightnessDown, exec, decbrightness
bind = , XF86Display, exec, wdisplays
bind = , XF86TouchpadToggle, exec, toggletouchpad

# Move focus with $mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod_SHIFT, left, moveintogroup, l
bind = $mainMod, right, movefocus, r
bind = $mainMod_SHIFT, right, moveintogroup, r
bind = $mainMod, up, movefocus, u
bind = $mainMod_SHIFT, up, moveintogroup, u
bind = $mainMod, down, movefocus, d
bind = $mainMod_SHIFT, down, moveintogroup, d

bind = $mainMod_SHIFT, E, moveoutofgroup

bind = $mainMod, J, layoutmsg, cyclenext
bind = $mainMod_SHIFT, J, layoutmsg, removehmaster
bind = $mainMod, K, layoutmsg, cycleprev
bind = $mainMod_SHIFT, K, layoutmsg, addmaster
bind = $mainMod, H, layoutmsg, swapwithmaster
bind = $mainMod_SHIFT, H,  changegroupactive, b
bind = $mainMod, L, layoutmsg, focusmaster
bind = $mainMod_SHIFT, L, changegroupactive, f

# Switch workspaces with $mainMod + [0-9]
workspace = eDP-1, $ws1
bind = $mainMod, 1, workspace, $ws1
bind = $mainMod, 2, workspace, $ws2
bind = $mainMod, 3, workspace, $ws3
bind = $mainMod, 4, workspace, $ws4
bind = $mainMod, 5, workspace, $ws5
bind = $mainMod, 6, workspace, $ws6
bind = $mainMod, 7, workspace, $ws7
bind = $mainMod, 8, workspace, $ws8
bind = $mainMod, 9, workspace, $ws9
bind = $mainMod, 0, workspace, $ws10

# Move active window to a workspace with $mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, $ws1
bind = $mainMod SHIFT, 2, movetoworkspace, $ws2
bind = $mainMod SHIFT, 3, movetoworkspace, $ws3
bind = $mainMod SHIFT, 4, movetoworkspace, $ws4
bind = $mainMod SHIFT, 5, movetoworkspace, $ws5
bind = $mainMod SHIFT, 6, movetoworkspace, $ws6
bind = $mainMod SHIFT, 7, movetoworkspace, $ws7
bind = $mainMod SHIFT, 8, movetoworkspace, $ws8
bind = $mainMod SHIFT, 9, movetoworkspace, $ws9
bind = $mainMod SHIFT, 0, movetoworkspace, $ws10

# Scroll through existing workspaces with $mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# special workspace
bind = $mainMod_SHIFT, grave, movetoworkspace, special
bind = $mainMod, grave, togglespecialworkspace,

# Move/resize windows with $mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

bind = $mainMod_SHIFT, W, togglegroup

# will switch to a submap called resize
bind = $mainMod, R, submap, resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 10 0
binde = , left, resizeactive, -10 0
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10

# use reset to go back to the global submap
bind = , escape, submap, reset 

# will reset the submap, meaning end the current one and return to the global one
submap=reset

