# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# font Terminus (TTF)
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# xwayland disable

# Your preferred terminal emulator
set $term alacritty
# set $term kitty -e tmux

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Clipboard manager

exec wl-paste -t text --watch clipman store 1>> ~/.local/share/clipman/clipman.log 2>&1 &

exec wl-paste -p -t text --watch clipman store --histpath="~/.local/share/clipman/clipman-primary.json"

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu bemenu
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu dmenu_path | dmenu -fn "Terminus (TTF):pixelsize=28" | xargs swaymsg exec
#set $_menu bemenu --fn "Monospace 12" --hf "#2B83A6" --tf "#2B83A6" -p
#set $menu dmenu_path | $_menu "" | xargs -rI{} swaymsg "exec {}"
# set $menu j4-dmenu-desktop --dmenu='bemenu -i --nb "#3f3f3f" --nf "#dcdccc" --fn "pango:DejaVu Sans Mono 12"' --term='termite'
set $rwofi wofi --show run
set $wwofi wofi --show window
# set $menu exec bemenu-run -i -p "Run:"  --fn "pango:monospace 14" --hf "#2B83A6" --tf "#2B83A6"
set $menu exec bemenu-run -i -p "Run:"  --fn "monospace 14" --hb "#89cff0" --hf "#000000" --tf "#000000" --tb "#2dc7bc" -l 10 

# # Default options
#for_window [class="^.*"] border pixel 2
default_border pixel
gaps inner 4
gaps outer 4 

# Seat configuration
seat * hide_cursor 3000

# Defining colors
set $white	#ffffff
set $cyan	#00afd7
set $acqua	#00d787 
set $wine 	#72003e
set $magenta 	#af005f
set $orange 	#ff8700
set $silver 	#e4e4e4
set $elegant	#1b1d1e
set $transparent #000000
#set $transparent #0000007f
# Set some nice 	colors		border		background	text		indicator	child_border
client.focused		$elegant	$cyan		$elegant	$white		$cyan
client.unfocused	$elegant	$elegant	$orange		$white		$elegant
client.focused_inactive	$elegant	$elegant	$acqua		$magenta	$acqua
client.urgent		$elegant	$magenta	$silver		$magenta	$magenta
client.placeholder	$elegant	$magenta	$silver		$white		$magenta

# Workspaces:

set $ws1 "1:üêß"
set $ws2 "2:ü¶ä"
set $ws3 "3:üåç" 
set $ws4 "4:üé•" 
set $ws5 "5:üì∑"
set $ws6 "6:üé∑"
set $ws7 "7:üìÆ"
set $ws8 "8:üìñ" 
set $ws9 "9:üíª"
set $ws10 "10:üîß"

### Key bindings

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+Tab workspace back_and_forth

# Kill focused window
bindsym $mod+q kill

# Start your launcher
bindsym $mod+d exec $menu
bindsym $mod+p exec $rwofi
bindsym $mod+Shift+p exec $rwofi

# Open Camera
bindsym $mod+c exec "mpv --no-osc --no-input-default-bindings --input-conf=/dev/null --title='mpvfloat' /dev/video0"

#showkeys
bindsym $mod+Shift+c exec swaykeys

# Volume control
bindsym $mod+Shift+a exec "$term -e alsamixer"

# Layout stuff:
bindsym $mod+s			split toggle
bindsym $mod+equal		gaps inner current set 4; gaps outer current set 4
bindsym $mod+g			gaps inner current plus 2; gaps outer current plus 2
bindsym $mod+Shift+g		gaps inner current minus 2; gaps outer current minus 2
bindsym $mod+Shift+d		gaps inner current set 0; gaps outer current set 0

#Emoji selection
bindsym $mod+i exec menuunicode


# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+Shift+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#

# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
#    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
bindsym $mod+Shift+escape exec "prompt 'Leave Sway?' 'pkill sway'"
bindsym $mod+Shift+x exec 'prompt "Shutdown computer?" "sudo -A shutdown now"'
bindsym $mod+Shift+BackSpace exec 'prompt "Reboot computer?" "sudo -A shutdown -r now"'

# lock screen
bindsym $mod+Shift+e exec swaylock -eFfki ~/Pictures/lockscreen.jpeg

# Function keys
# bindsym XF86MonBrightnessUp exec light -A 5
# bindsym XF86MonBrightnessDown exec light -U 5
bindsym XF86AudioLowerVolume exec "sh ~/.local/bin/key_sound.sh down"
bindsym XF86AudioRaiseVolume exec "sh ~/.local/bin/key_sound.sh up"
bindsym XF86AudioMute exec "sh ~/.local/bin/key_sound.sh mute"
bindsym XF86MonBrightnessUp exec incbrightness 
bindsym XF86MonBrightnessDown exec decbrightness
bindsym XF86Display exec "sh ~/.local/bin/key_screen.sh"
#screencapture
bindsym print exec bemenuscreenshot
bindsym $mod+print exec bemenurecord
#Launch applications
bindsym $mod+Shift+w exec $BROWSER
# Resizing containers:
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window‚Äôs width.
    # Pressing right will grow the window‚Äôs width.
    # Pressing up will shrink the window‚Äôs height.
    # Pressing down will grow the window‚Äôs height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym j resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

mode "opacity" {
    bindsym 0 opacity 1
    bindsym 1 opacity 0.55
    bindsym 2 opacity 0.60
    bindsym 3 opacity 0.65
    bindsym 4 opacity 0.70
    bindsym 5 opacity 0.75
    bindsym 6 opacity 0.80
    bindsym 7 opacity 0.85
    bindsym 8 opacity 0.90
    bindsym 9 opacity 0.95

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+t mode "opacity"

bindsym $mod+Shift+v exec 'clipman pick -t bemenu --histpath="~/.local/share/clipman/clipman-primary.json"'

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output eDP-1 bg ~/Pictures/Desktop.jpeg stretch


# Example configuration:
#output HDMI-A-2 pos 1920 0 res 768x1366 transform 90
#output eDP-1 pos 0 0 res 1920x1080
#workspace 3 output HDMI-A-2
#workspace 2 output edp-1
#
#output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs


### Input configuration
#
# Example configuration:
#
#input "2:14:SynPS/2_Synaptics_TouchPad" {
#    dwt enabled
#    tap enabled
#    natural_scroll enabled
#    middle_emulation enabled
#}
#
input {
	* {
		xkb_layout "us,ir"
		xkb_model "asus_laptop"
		# no click needed
		tap enabled
		xkb_options "caps:escape_shifted_capslock,grp:alt_shift_toggle,altwin:menu_win"
	}
}

#input type:keyboard xkb_layout us-ir
#input * { xkb_options caps:escape }
#
#input 1267:32:Elan_TrackPoint {
#    pointer_accel 0.8
#}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.



# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
##    font Terminus (TTF) 28px
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
exec {
	waybar
	swayidle -w \
                timeout 300 'swaylock -eFfki ~/Pictures/lockscreen.jpeg' \
		timeout 600 'swaymsg "output * dpms off"' \
                resume 'swaymsg "output * dpms on"' \
                before-sleep 'swaylock -eFfki ~/Pictures/lockscreen.jpeg' 
	mako

	dino
	firefox-developer-edition
}

include /etc/sway/config.d/*


### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

