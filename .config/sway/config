# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# font Terminus (TTF)
### Variables

# Logo key. Use Mod1 for Alt.
set $mod	Mod4
set $alt	Mod1
# Run pure wayland
xwayland disable

# Your preferred terminal emulator
set $term	alacritty
# set $term	kitty -e tmux

# Home row direction keys, like vim
set $left	h
set $down	j
set $up		k
set $right	l

# Clipman config
exec wl-paste -t text --watch clipman store 1>> ~/.local/share/clipman/clipman.log 2>&1 &
exec wl-paste -p -t text --watch clipman store --histpath="~/.local/share/clipman/clipman-primary.json"

# Random background
exec setbg

# Notification
exec mako

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu	swaymsg exec BEMENU_BACKEND=wayland "$(dmenu_path | bemenu -b --list 20)"
# set $menu	dmenu_path | dmenu | xargs swaymsg exec --
# set $menu	dmenu_path | dmenu -fn "Terminus (TTF):pixelsize=28" | xargs swaymsg exec
# set $menu	bemenu --fn "Monospace 12" --hf "#2B83A6" --tf "#2B83A6" -p
# set $menu	dmenu_path | $_menu "" | xargs -rI{} swaymsg "exec {}"
# set $menu	j4-dmenu-desktop --dmenu='bemenu -i --nb "#3f3f3f" --nf "#dcdccc" --fn "pango:DejaVu Sans Mono 12"' --term='termite'
# set $menu	exec bemenu-run -i -p "Run:"  --fn "pango:monospace 14" --hf "#2B83A6" --tf "#2B83A6"
set $menu	exec bemenu-run -i -p "Run:"  --fn "monospace 14" --hb "#89cff0" --hf "#000000" --tf "#000000" --tb "#2dc7bc" -l 10 

# Another alternative use wofi
# set $rwofi wofi --show run
# set $wwofi wofi --show window

# # Default options
#for_window [class="^.*"] border pixel 2
default_border pixel
gaps inner 4
gaps outer 4 

# Seat configuration
seat * hide_cursor 3000

# Defining colors
set $white		#ffffff
set $cyan		#00afd7
set $acqua		#00d787 
set $wine		#72003e
set $magenta		#af005f
set $orange		#ff8700
set $silver		#e4e4e4
set $elegant		#1b1d1e
set $transparent	#000000
#set $transparent	#0000007f
# Set some nice 	colors		border		background	text		indicator	child_border
client.focused		$elegant	$cyan		$elegant	$white		$cyan
client.unfocused	$elegant	$elegant	$orange		$white		$elegant
client.focused_inactive	$elegant	$elegant	$acqua		$magenta	$acqua
client.urgent		$elegant	$magenta	$silver		$magenta	$magenta
client.placeholder	$elegant	$magenta	$silver		$white		$magenta

# Workspaces:
set $ws1	"1:üêß"
set $ws2	"2:ü¶ä"
set $ws3	"3:üåç" 
set $ws4	"4:üé•" 
set $ws5	"5:üì∑"
set $ws6	"6:üé∑"
set $ws7	"7:üìÆ"
set $ws8	"8:üìñ" 
set $ws9	"9:üíª"
set $ws10	"10:üîß"

### Key bindings
# switch to workspace
bindsym $mod+1		workspace $ws1
bindsym $mod+2		workspace $ws2
bindsym $mod+3		workspace $ws3
bindsym $mod+4		workspace $ws4
bindsym $mod+5		workspace $ws5
bindsym $mod+6		workspace $ws6
bindsym $mod+7		workspace $ws7
bindsym $mod+8		workspace $ws8
bindsym $mod+9		workspace $ws9
bindsym $mod+0		workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1	move container to workspace $ws1
bindsym $mod+Shift+2	move container to workspace $ws2
bindsym $mod+Shift+3	move container to workspace $ws3
bindsym $mod+Shift+4	move container to workspace $ws4
bindsym $mod+Shift+5	move container to workspace $ws5
bindsym $mod+Shift+6	move container to workspace $ws6
bindsym $mod+Shift+7	move container to workspace $ws7
bindsym $mod+Shift+8	move container to workspace $ws8
bindsym $mod+Shift+9	move container to workspace $ws9
bindsym $mod+Shift+0	move container to workspace $ws10

# Moving around:
#
# Move your focus around
bindsym $mod+$left	focus left
bindsym $mod+$down	focus down
bindsym $mod+$up	focus up
bindsym $mod+$right	focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left	focus left
bindsym $mod+Down	focus down
bindsym $mod+Up		focus up
bindsym $mod+Right	focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left	move left
bindsym $mod+Shift+$down	move down
bindsym $mod+Shift+$up		move up
bindsym $mod+Shift+$right	move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left 	move left
bindsym $mod+Shift+Down		move down
bindsym $mod+Shift+Up		move up
bindsym $mod+Shift+Right	move right

#Resizing
bindsym $mod+bracketleft	resize shrink width 100 px or 10 ppt
bindsym $mod+bracketright	resize grow width 100 px or 10 ppt
bindsym $mod+semicolon		resize shrink height 100 px or 10 ppt
bindsym $mod+apostrophe		resize grow height 100 px or 10 ppt

bindsym $mod+Shift+bracketleft	resize shrink width 1 px or 1 ppt
bindsym $mod+Shift+bracketright	resize grow width 1 px or 1 ppt
bindsym $mod+Shift+semicolon	resize shrink height 1 px or 1 ppt
bindsym $mod+Shift+apostrophe	resize grow height 1 px or 1 ppt

# Basics:
#
# Start a terminal
bindsym $mod+Return	exec $term
bindsym $mod+Tab	workspace back_and_forth

# Kill focused window
bindsym $mod+q 		kill

# Start your launcher
bindsym $mod+d		exec $menu
# bindsym $mod+?	exec $rwofi
# bindsym $mod+?	exec $rwofi

# Open Camera
bindsym $mod+c 		exec "mpv --no-osc --no-input-default-bindings --input-conf=/dev/null --title='mpvfloat' /dev/video0"

#showkeys
bindsym $mod+p		exec "killall wshowkeys || wshowkeys"

# Volume control
bindsym $mod+a		exec "$term -e pulsemixer"

# Layout stuff:
bindsym $mod+t			split toggle
bindsym $mod+underscore		gaps inner current set 0; gaps outer current set 0
bindsym $mod+equal		gaps inner current plus 2; gaps outer current plus 2
bindsym $mod+minus		gaps inner current minus 2; gaps outer current minus 2
bindsym $mod+plus		gaps inner current set 4; gaps outer current set 4

# Emoji selection
bindsym $mod+i exec 	menuunicode


# You can "split" the current object of your focus 
# for horizontal and vertical splits
# respectively.
# bindsym $mod+?	splith
# bindsym $mod+?	splitv

# Switch the current container between different layout styles
bindsym $mod+Shift+s	layout stacking
bindsym $mod+Shift+w	layout tabbed
bindsym $mod+Shift+e	layout toggle split

# Make the current focus fullscreen
bindsym $mod+f			fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space	floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space 		focus mode_toggle

# Move focus to the parent container
bindsym $mod+Shift+a		focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+grave 	move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+grave		scratchpad show
#

# Reload the configuration file
bindsym $mod+Shift+r		reload

# Exit sway (logs you out of your Wayland session)
# bindsym $mod+? exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
bindsym $mod+escape		exec "prompt 'Leave Sway?' 'pkill sway'"
bindsym $mod+x			exec 'prompt "Shutdown computer?" "sudo -A shutdown now"'
bindsym $mod+BackSpace		exec 'prompt "Reboot computer?" "sudo -A shutdown -r now"'

# lock screen
bindsym $mod+e			exec swaylock -eFfki ~/Pictures/lockscreen.png

# Function keys
# bindsym XF86MonBrightnessUp 	exec light -A 5
# bindsym XF86MonBrightnessDown exec light -U 5
bindsym XF86AudioLowerVolume	exec "sound -c down"
bindsym XF86AudioRaiseVolume	exec "sound -c up"
bindsym XF86AudioMute		exec "sound -c mute"
bindsym XF86MonBrightnessUp	exec incbrightness 
bindsym XF86MonBrightnessDown	exec decbrightness
bindsym XF86Display		exec "wdisplays"
#screencapture
bindsym print			exec grim "pic-full-$(date '+%y%m%d-%H%M-%S').png"
bindsym Shift+print		exec bemenuscreenshot
bindsym $mod+print		exec bemenurecord
#Launch applications
bindsym $mod+w			exec $BROWSER
bindsym $mod+g			exec gimp
bindsym $mod+b			exec "$term -e lf"
bindsym $mod+s			exec "$term -e broot -h"

### Clipboard 
bindsym $mod+Shift+v	exec 'clipman pick --tool bemenu -T"--hb=#89cff0 --fn=monospace --fn=18 --hb=#89cff0 --hf=#000000 --tf=#000000 --tb=#2dc7bc" --histpath="~/.local/share/clipman.json"'
bindsym $mod+v		exec "wclipboard"

### Mounting Function
bindsym $mod+F9		exec "menumount"
bindsym $mod+F10	exec "menuumount"
bindsym $mod+F12	exec "$term -e nmtui"

# Resizing containers:
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window‚Äôs width.
    # Pressing right will grow the window‚Äôs width.
    # Pressing up will shrink the window‚Äôs height.
    # Pressing down will grow the window‚Äôs height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym j resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

set $opacity 0.98
for_window [class=".*"] opacity $opacity
for_window [app_id=".*"] opacity $opacity

mode "opacity" {
    bindsym 0 opacity 1
    bindsym 1 opacity 0.55
    bindsym 2 opacity 0.65
    bindsym 3 opacity 0.70
    bindsym 4 opacity 0.75
    bindsym 5 opacity 0.80
    bindsym 6 opacity 0.85
    bindsym 7 opacity 0.90
    bindsym 8 opacity 0.95
    bindsym 9 opacity 0.98

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+o		mode "opacity"

bindsym $mod+slash	opacity plus 0.02
bindsym $mod+period	opacity minus 0.02

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg ~/Pictures/Desktop.png stretch


# Example configuration:
#output HDMI-A-2 pos 1920 0 res 768x1366 transform 90
#output eDP-1 pos 0 0 res 1920x1080
#workspace 3 output HDMI-A-2
#workspace 2 output edp-1
#
#output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs


### Input configuration
#
# Example configuration:
#
#input "2:14:SynPS/2_Synaptics_TouchPad" {
#    dwt enabled
#    tap enabled
#    natural_scroll enabled
#    middle_emulation enabled
#}
#
input {
	* {
		xkb_layout "us,ir"
		xkb_model "asus_laptop"
		# no click needed
		tap enabled
		xkb_options "caps:escape_shifted_capslock,grp:alt_shift_toggle,altwin:menu_win"
	}
}

# Update keyboard layout in waybar
bindsym Mod1+Shift_L		exec "pkill -SIGRTMIN+1 waybar &"
bindsym Mod1+Shift_R		exec "pkill -SIGRTMIN+1 waybar &"

# Toggle Bar
bindsym $mod+Shift+b		exec "killall waybar || waybar"

#input type:keyboard xkb_layout us-ir
#input * { xkb_options caps:escape }
#
#input 1267:32:Elan_TrackPoint {
#    pointer_accel 0.8
#}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.


# Status Bar & Idle configuration
#
# Read `man 5 sway-bar` for more information about this section.
exec {
	waybar
	swayidle -w \
                timeout 300 'swaylock -eFfki ~/Pictures/lockscreen.png' \
		timeout 600 'swaymsg "output * dpms off"' \
                resume 'swaymsg "output * dpms on"' \
                before-sleep 'swaylock -eFfki ~/Pictures/lockscreen.png' 
	mako
}

### Another status Bar
#bar {
#    position top
#
##    font Terminus (TTF) 28px
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

### Another idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

include /etc/sway/config.d/*

## bindings help

## $mod+[1-9,0]		workspace[1-10]
## $mod+Shift+[1-9,0]	move to workspace[1-10]
## 
## $mod+a		alsamixer 
## $mod+b		file manager
## $mod+c		webcam
## $mod+d		$MENU
## $mod+e		lockscreen
## $mod+f		fullscreen
## $mod+g		gimp
## $mod+h		focus left
## $mod+i		select emoji
## $mod+j		focus down
## $mod+k		focus up
## $mod+l		focus right
## $mod+m		
## $mod+n
## $mod+o		opacity
## $mod+p		showkeys
## $mod+q		kill
## $mod+r		resize
## $mod+s		search
## $mod+t		split toggle
## $mod+u
## $mod+v		clipboard
## $mod+w		$BROWSER
## $mod+x		shutdown
## $mod+y		
## $mod+z		
## $mod+space		focus mod_toggle
## 
## $mod+Shift+a		focus parent
## $mod+Shift+b		toggle bar
## $mod+Shift+c
## $mod+Shift+d		
## $mod+Shift+e		layout toggle split
## $mod+Shift+f
## $mod+Shift+g		
## $mod+Shift+h		move left
## $mod+Shift+i
## $mod+Shift+j		move down
## $mod+Shift+k		move up
## $mod+Shift+l		move right
## $mod+Shift+m
## $mod+Shift+n
## $mod+Shift+o
## $mod+Shift+p
## $mod+Shift+q
## $mod+Shift+r		reload
## $mod+Shift+s		layout stacking
## $mod+Shift+t
## $mod+Shift+u
## $mod+Shift+v		clipman
## $mod+Shift+w		layout tabbed
## $mod+Shift+x
## $mod+Shift+y
## $mod+Shift+z
## $mod+Shift+space	floating toggle
## 
## F1
## F2
## F3
## F4
## F5			decrease brightness
## F6			increase brightness
## F7		
## F8			displayselect
## F9	
## F10			mute
## F11			decrease audio
## F12			increase audio
## print		fullscreen screenshot
## 
## Shift+F1
## Shift+F2
## Shift+F3
## Shift+F4
## Shift+F5
## Shift+F6
## Shift+F7
## Shift+F8
## Shift+F9
## Shift+F10
## Shift+F11
## Shift+F12
## Shift+print		screenshot
## 
## $mod+F1
## $mod+F2
## $mod+F3
## $mod+F4
## $mod+F5
## $mod+F6
## $mod+F7
## $mod+F8
## $mod+F9		mount
## $mod+F10		unmount
## $mod+F11
## $mod+F12		network manager tui
## 
## $mod+plus		default gaps
## $mod+equal		increase gaps
## $mod+minus		decrease gaps
## $mod+grave		scratchpad show
## $mod+Escape		exit
## $mod+BackSpace	reboot
## $mod+Return		$TERMINAL
## $mod+left		focus left
## $mod+right		focus right
## $mod+up		focus up
## $mod+down		focus down
## $mod+bracketleft	shrink width
## $mod+bracketright	grow width
## $mod+semicolon	shrink height
## $mod+apostrophe	grow height
## $mod+slash
## $mod+period
## 
## $mod+Shift+grave	move scratchpad
## $mod+underscore	zero gaps
## $mod+Shift+Escape
## $mod+Shift+BackSpace
## $mod+Shift+Return
## $mod+Shift+left		move left
## $mod+Shift+right		move right
## $mod+Shift+up		move up
## $mod+Shift+down		move down
## $mod+Shift+bracketleft	adjust shrink width
## $mod+Shift+bracketright	adjust grow width
## $mod+Shift+semicolon		adjust shrink height
## $mod+Shift+apostrophe	adjust grow height
## $mod+Shift+slash
## $mod+Shift+period
##
## $alt+{Shift_L,Shift_R}	change keyboard layout
