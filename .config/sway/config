# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# font Terminus (TTF)
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# xwayland disable

# Defining colors
set $white	#ffffff
set $cyan	#00afd7
set $acqua	#00d787 
set $wine 	#72003e
set $magenta 	#af005f
set $orange 	#ff8700
set $silver 	#e4e4e4
set $elegant	#1b1d1e
set $transparent #000000
#set $transparent #0000007f
# Set some nice 	colors		border		background	text		indicator	child_border
client.focused		$elegant	$cyan		$elegant	$white		$cyan
client.unfocused	$elegant	$elegant	$orange		$white		$elegant
client.focused_inactive	$elegant	$elegant	$acqua		$magenta	$acqua
client.urgent		$elegant	$magenta	$silver		$magenta	$magenta
client.placeholder	$elegant	$magenta	$silver		$white		$magenta

# floating_modifier $mod


# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term termite
# set $term kitty -e tmux

# # Default options
for_window [class="^.*"] border pixel 2
gaps inner 5
gaps outer 5 

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu bemenu
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu dmenu_path | dmenu -fn "Terminus (TTF):pixelsize=28" | xargs swaymsg exec
set $menu exec bemenu-run -i -p "Run:"  --fn "pango:monospace 14"
# set $menu j4-dmenu-desktop --dmenu='bemenu -i --nb "#3f3f3f" --nf "#dcdccc" --fn "pango:DejaVu Sans Mono 12"' --term='termite'
set $rwofi wofi --show run
set $wwofi wofi --show window

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/lockscreen.jpeg stretch
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#

#input * { xkb_options caps:escape }
#
#input 1267:32:Elan_TrackPoint {
#    pointer_accel 0.8
#}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    bindsym $mod+Tab workspace back_and_forth

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+p exec $rwofi
    bindsym $mod+Shift+p exec $rwofi

    # lock screen
    bindsym $mod+Shift+x exec swaylock -eFfki ~/Pictures/lockscreen.jpeg

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
set $ws1 "1:üêß"
set $ws2 "2:ü¶ä"
set $ws3 "3:üåç" 
set $ws4 "4:üé•" 
set $ws5 "5:üì∑"
set $ws6 "6:üé∑"
set $ws7 "7:üìÆ"
set $ws8 "8:üìñ" 
set $ws9 "9:üíª"
set $ws10 "10:üîß"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Function keys

# bindsym XF86MonBrightnessUp exec light -A 5
# bindsym XF86MonBrightnessDown exec light -U 5

bindsym XF86AudioLowerVolume exec "sh ~/.local/bin/key_sound.sh down"
bindsym XF86AudioRaiseVolume exec "sh ~/.local/bin/key_sound.sh up"
bindsym XF86AudioMute exec "sh ~/.local/bin/key_sound.sh mute"
bindsym XF86MonBrightnessUp exec incbrightness 
bindsym XF86MonBrightnessDown exec decbrightness
bindsym XF86Display exec "sh ~/.local/bin/key_screen.sh"


#
# Layout stuff:
#
bindsym $mod+t			split toggle
bindsym $mod+Shift+t		gaps inner current set 15; gaps outer current set 15

bindsym $mod+Shift+y		exec --no-startup-id i3resize left

bindsym $mod+u			exec --no-startup-id ddspawn tmuxdd
bindsym $mod+Shift+u		exec --no-startup-id i3resize down

bindsym $mod+Shift+i		exec --no-startup-id i3resize up

bindsym $mod+g			gaps inner current plus 5; gaps outer current plus 2
bindsym $mod+Shift+g		gaps inner current minus 5; gaps outer current minus 2

bindsym $mod+Shift+d		gaps inner current set 0; gaps outer current set 0

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
##    font Terminus (TTF) 28px
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
exec {
	waybar
	swayidle -w \
                timeout 300 'swaylock -eFfki ~/Pictures/lockscreen.jpeg' \
		timeout 600 'swaymsg "output * dpms off"' \
                resume 'swaymsg "output * dpms on"' \
                before-sleep 'swaylock -eFfki ~/Pictures/lockscreen.jpeg' 
	mako

	dino
	firefox-developer-edition
}

include /etc/sway/config.d/*
