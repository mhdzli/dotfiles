#!/bin/bash
# `list_geometry` returns the geometry of the focused of visible windows. You can also get they title
# by setting a second argument to `with_description`. The geometry and the title are seperated by `\t`.
#
# Arguments:
#   $1: `focused` or `visible`
#   $2: `with_description` or nothing
#
# Output examples:
#   - with the `with_description` option:
#      12,43 100x200\tTermite
#   - without the `with_description` option:
#      12,43 100x200
function list_geometry () {
	[ "$2" = with_description ] && local append="\t\(.name)" || local append=
	swaymsg -t get_tree | jq -r '.. | (.nodes? // empty)[] | select(.'$1' and .pid) | "\(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)'$append'"'
}

#WINDOWS=`list_geometry visible with_description`
FOCUSED=`list_geometry focused`


FILENAME="$(date +'%Y-%m-%d-%H%M%S_screenshot.png')"

choice=$(printf "fullscreen\\nregion\\nfocused\\n$WINDOWS\\" | bemenu -i --fn "monospace 14" --hb "#89cff0" --hf "#000000" --tf "#000000" --tb "#2dc7bc" -l 10 -P " ðŸ“¸ " -p "Select screenshot type:")
case "$choice" in
	fullscreen) grim "$FILENAME";;
	region) grim -g "$(slurp)" "$FILENAME";;
	focused) grim -g "$FOCUSED" "$FILENAME";;
	*) 
		echo "OK" | bemenu -i --fn "monospace 14" --hb "#89cff0" --hf "#000000" --tf "#000000" --tb "#2dc7bc" -p "Screenshot is cancelled ðŸ“· "
		exit 0
#	    ;;
#	*)
#		GEOMETRY="`echo \"$CHOICE\" | cut -d$'\t' -f1`"
#	    grim -g "$GEOMETRY" "$FILENAME"
esac

wl-copy < "$FILENAME"

