#!/bin/sh

Usage(){
    while read -r CurLine; do
        printf '%b\n' "$CurLine"
	done <<-EOF
           \twkb-switch -l|--list               Displays all layout groups
           \twkb-switch -h|--help|-?            Displays this message
           \twkb-switch -n|--next               Switch to the next layout group
           \twkb-switch -s|--set <LAYOUT-ID>    Set the keyboard layout to the given layout id
           \twkb-switch [-p]                    Displays current layout group
	EOF
}

Err() {
    printf 'Err: %s\n' "$2" 1>&2
    [ $1 -gt 0 ] && exit $1
}
if [ -n "$(swaymsg -t get_inputs 2> /dev/null | grep 'input')" ]; then
    wm="sway"
elif [ -z "$(hyprctl devices 2> /dev/null | grep 'HYPRLAND_INSTANCE_SIGNATURE')" ]; then
    wm="hyprland"
else
    Err 1 'Your current window manager is not supported. (Only sway and Hyprland are supported for now)'
fi

#if [ "$layout" = "English (US)" ]; then
#    layout='us'
#else
#    layout='ir'
#fi

while [ -n "$1" ]; do
    case $wm in
        sway)
            identifier=$(swaymsg -t get_inputs | grep 'identifier.*keyboard' | cut -d'"' -f4);
            layout=$(swaymsg -t get_inputs | grep -m1 "xkb_active_layout_name" | cut -d '"' -f4);
            case $1 in
                --help|-h|-\?)
                    Usage; exit 0 ;;
                -p|"")
                    printf '%s\n' "$layout"; exit 0 ;;
                -l|--list)
                    swaymsg -t get_inputs | jq -r ".[] | select(.identifier==\"$identifier\") | .xkb_layout_names[]"; exit 0 ;;
                -n|--next)
                    swaymsg input "$identifier" xkb_switch_layout next ; exit 0 ;;
                -s|--set)
                    swaymsg input "$identifier" xkb_switch_layout "$2" ; exit 0 ;;
                -b|--sway-border)
                    [ "$layout" = "English (US)" ] && (swaymsg client.focused "#282a36" "#ff79c6" "#282a36" "#f8f8f2" "#bd93f9" && swaymsg client.unfocused "#282a36" "#bd93f9" "#282a36" "#f8f8f2" "#ff79c6") || (swaymsg client.focused "#282a36" "#bd93f9" "#282a36" "#f8f8f2" "#ff79c6" && swaymsg client.unfocused "#282a36" "#ff79c6" "#282a36" "#f8f8f2" "#bd93f9"); exit 0 ;;
                -*)
                    Err 1 'Incorrect argument(s) specified.' ;;
                *)
                    break ;;
            esac;;
        hyprland)
            identifier=$(hyprctl devices -j | jq -r '.keyboards[] | select(.main == true) | .name');
            layout=$(hyprctl devices -j | jq -r '.keyboards[] | select(.main == true) | .active_keymap');
            case $1 in
                --help|-h|-\?)
                    Usage; exit 0 ;;
                -p|"")
                    printf '%s\n' "$layout"; exit 0 ;;
                -l|--list)
                    hyprctl devices -j | jq -r '.keyboards[] | select(.main == true) | .layout'; exit 0 ;;
                -n|--next)
                    hyprctl switchxkblayout "$identifier" next; exit 0;;
                -s|--set)
                    hyprctl switchxkblayout "$identifier" "$2" ; exit 0 ;;
                -b|--sway-border)
                    [ "$layout" = "English (US)" ] && hyprctl keyword general:col.active_border "rgba(bd93f9aa) rgba(ff79c6aa) 45deg" || hyprctl keyword general:col.active_border "rgba(ff79c6aa) rgba(bd93f9aa) 45deg"; exit 0 ;;
                -*)
                    Err 1 'Incorrect argument(s) specified.' ;;
                *)
                    break ;;
            esac;;
    esac
done

