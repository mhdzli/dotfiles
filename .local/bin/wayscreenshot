#!/bin/bash
# `list_geometry` returns the geometry of the focused of visible windows. You can also get they title
# by setting a second argument to `with_description`. The geometry and the title are seperated by `\t`.
#
# Arguments:
#   $1: `focused` or `visible`
#   $2: `with_description` or nothing
#
# Output examples:
#   - with the `with_description` option:
#      12,43 100x200\tTermite
#   - without the `with_description` option:
#      12,43 100x200

menu="$MENU -p"

function list_geometry () {
    [ "$2" = with_description ] && local append="\t\(.name)" || local append=
    swaymsg -t get_tree | jq -r '.. | (.nodes? // empty)[] | select(.'$1' and .pid) | "\(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)'$append'"'
}

windows=`list_geometry visible with_description`
focused=`list_geometry focused`


filename="$(date +'%Y-%m-%d-%H%M%S_screenshot.png')"

choice=$(printf "fullscreen\\nregion\\nfocused\\n$windows" | $menu "Select screenshot type")
case "$choice" in
    fullscreen) grim "pic-full-$filename";;
    region) grim -g "$(slurp)" "pic-selected-$filename";;
    focused) grim -g "$focused" "pic-focused-$filename";;
    *)
        geometry="`echo \"$choice\" | cut -d$'\t' -f1`"
        grim -g "$geometry" "pic-window-$filename"
    # *) 
    #     echo "OK" | $menu "Screenshot is cancelled ðŸ“· "
    #     exit 0
esac

# wl-copy < "$filename"

